[
  {
    "question": "What does directly mapping inputs refer to?",
    "options": ["Mapping actions to multiple buttons", "Abstracting inputs through Unity Input system", "Mapping device buttons directly", "Adding a Player Input component"],
    "answer": "Mapping device buttons directly"
  },
  {
    "question": "What is the purpose of abstracting inputs indirectly?",
    "options": ["To map actions to a single button", "To perform the same action with different buttons", "To map device buttons directly", "To add a Player Input component to the GameObject"],
    "answer": "To perform the same action with different buttons"
  },
  {
    "question": "How are inputs abstracted indirectly in Unity?",
    "options": ["Through the Unity Input system or input manager", "By mapping device buttons directly", "Using a Player Input component", "All of the above"],
    "answer": "Through the Unity Input system or input manager"
  },
  {
    "question": "What is a 'Prefab' in Unity?",
    "options": ["A pre-configured asset for re-use", "A single collider for multiple gameobjects", "A type of material", "A component for mapping inputs"],
    "answer": "A pre-configured asset for re-use"
  },
  {
    "question": "What can a Prefab consist of?",
    "options": ["Multiple materials", "One or many GameObjects", "A single GameObject", "A Player Input component"],
    "answer": "One or many GameObjects"
  },
  {
    "question": "What is one use of a Prefab?",
    "options": ["To map inputs directly", "To add a single collider to span over multiple gameobjects", "To change materials dynamically", "To create a Player Input component"],
    "answer": "To add a single collider to span over multiple gameobjects"
  },
  {
    "question": "How can materials be set in Unity?",
    "options": ["Manually or programmatically", "Only manually", "Only programmatically", "Through Prefabs only"],
    "answer": "Manually or programmatically"
  },
  {
    "question": "What is the difference between 'physical material' and 'mesh renderer material'?",
    "options": ["Physical material is used for visual appearance", "Mesh renderer material specifies physical properties", "Physical material specifies physical properties", "There is no difference"],
    "answer": "Physical material specifies physical properties"
  },
  {
    "question": "What does the 'Renderer-material.html' documentation page describe?",
    "options": ["How to load resources", "Types of collision detection", "How to set materials", "Prefab overrides"],
    "answer": "How to set materials"
  },
  {
    "question": "What is the function of 'Resources.Load.html' in Unity?",
    "options": ["To load physical materials", "To change materials dynamically", "To create Prefabs", "To map inputs indirectly"],
    "answer": "To change materials dynamically"
  },
  {
    "question": "What is the purpose of 'Interpolate vs. Extrapolate' in Rigidbodies?",
    "options": ["To set materials", "To detect collisions", "To manage motion smoothing", "To specify physical properties"],
    "answer": "To manage motion smoothing"
  },
  {
    "question": "What are 'Collision Detection types' used for?",
    "options": ["To smooth motion", "To detect interactions between objects", "To set materials", "To create Prefabs"],
    "answer": "To detect interactions between objects"
  },
  {
    "question": "What are 'Constraints' in the context of Rigidbodies?",
    "options": ["Limitations on motion", "Types of materials", "Prefab configurations", "Input mapping methods"],
    "answer": "Limitations on motion"
  },
  {
    "question": "What is the 'Fire' method in 'MyPlayerScript' used for?",
    "options": ["To log movement", "To instantiate Prefabs", "To log an action", "To detect collisions"],
    "answer": "To log an action"
  },
  {
    "question": "What does the 'Move' method in 'MyPlayerScript' do?",
    "options": ["Logs the action of moving", "Changes materials", "Detects collisions", "Creates Prefabs"],
    "answer": "Logs the action of moving"
  },
  {
    "question": "What is the role of 'Player Input' component?",
    "options": ["To map inputs directly", "To abstract inputs into actions", "To create Prefabs", "To set materials"],
    "answer": "To abstract inputs into actions"
  },
  {
    "question": "What is an example of a Prefab in a bowling game?",
    "options": ["The ball", "The pins", "The scoreboard", "The lane"],
    "answer": "The pins"
  },
  {
    "question": "What are 'Prefab overrides'?",
    "options": ["Changes to the default Prefab settings", "A type of Rigidbody", "A method to set materials", "An input mapping technique"],
    "answer": "Changes to the default Prefab settings"
  },
  {
    "question": "What is the significance of 'Renderer' in Unity?",
    "options": ["It is used to map inputs", "It is a component that handles visual appearance", "It is a type of Prefab", "It is used to specify physical properties"],
    "answer": "It is a component that handles visual appearance"
  },
  {
    "question": "What is the function of 'Physical material'?",
    "options": ["To handle visual appearance", "To specify physical properties of objects", "To map inputs", "To create Prefabs"],
    "answer": "To specify physical properties of objects"
  }
]
