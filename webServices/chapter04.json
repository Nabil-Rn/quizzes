[
    {
        "question": "What is a REST API?",
        "options": [
            "A type of software architecture",
            "A set of rules for building web services",
            "A programming language",
            "A database management system"
        ],
        "answer": "A set of rules for building web services"
    },
    {
        "question": "What does REST stand for?",
        "options": [
            "Representational State Transfer",
            "Reliable Server Technology",
            "Resource Sharing Technique",
            "Responsive State Testing"
        ],
        "answer": "Representational State Transfer"
    },
    {
        "question": "Which HTTP method is used to retrieve a resource?",
        "options": [
            "GET",
            "POST",
            "PUT",
            "DELETE"
        ],
        "answer": "GET"
    },
    {
        "question": "Which HTTP method is used to create a new resource?",
        "options": [
            "GET",
            "POST",
            "PUT",
            "DELETE"
        ],
        "answer": "POST"
    },
    {
        "question": "What are the nouns of a REST API?",
        "options": [
            "Methods",
            "Status codes",
            "Resources",
            "Headers"
        ],
        "answer": "Resources"
    },
    {
        "question": "What is a resource in REST API?",
        "options": [
            "A server that hosts the API",
            "The data returned by the API",
            "An individual addressable entity",
            "A type of HTTP method"
        ],
        "answer": "An individual addressable entity"
    },
    {
        "question": "What is a collection resource?",
        "options": [
            "A list of methods",
            "A list of resources of the same type",
            "A single resource",
            "A type of API"
        ],
        "answer": "A list of resources of the same type"
    },
    {
        "question": "How are resources manipulated in REST API?",
        "options": [
            "Using a large set of methods",
            "Using a small set of methods",
            "Using SQL queries",
            "Using resource names only"
        ],
        "answer": "Using a small set of methods"
    },
    {
        "question": "What is the standard set of HTTP methods for REST APIs?",
        "options": [
            "GET, POST, PUT, PATCH, DELETE",
            "CONNECT, TRACE, OPTIONS, HEAD",
            "SELECT, INSERT, UPDATE, DELETE",
            "CREATE, READ, UPDATE, DESTROY"
        ],
        "answer": "GET, POST, PUT, PATCH, DELETE"
    },
    {
        "question": "What is the first step in designing a REST API?",
        "options": [
            "Decide the resource name schemes",
            "Assign methods to resources",
            "Determine what types of resources an API provides",
            "Decide the resource schemas"
        ],
        "answer": "Determine what types of resources an API provides"
    },
    {
        "question": "What does a resource's state refer to?",
        "options": [
            "Its availability",
            "Its location",
            "Its representation",
            "Its security"
        ],
        "answer": "Its representation"
    },
    {
        "question": "What pattern is used for sub-resources in REST API?",
        "options": [
            "GET /{resource}/{resource-id}/{sub-resource}",
            "POST /{resource}/{sub-resource}",
            "PUT /{resource}/{resource-id}/{sub-resource}",
            "DELETE /{resource}/{sub-resource}/{sub-resource-id}"
        ],
        "answer": "GET /{resource}/{resource-id}/{sub-resource}"
    },
    {
        "question": "What type of resource can be paged, sorted, and filtered?",
        "options": [
            "Simple resource",
            "Collection resource",
            "Instance resource",
            "Singleton resource"
        ],
        "answer": "Collection resource"
    },
    {
        "question": "What does a dependent relationship in REST API imply?",
        "options": [
            "Resources can exist independently",
            "Resources must belong to another resource instance",
            "Resources are unrelated",
            "Resources are duplicated"
        ],
        "answer": "Resources must belong to another resource instance"
    },
    {
        "question": "What is an associative relationship in REST API?",
        "options": [
            "Resources are automatically deleted together",
            "Resources are created at the same time",
            "Users assigned to a resource become collaborators",
            "Resources share the same ID"
        ],
        "answer": "Users assigned to a resource become collaborators"
    },
    {
        "question": "What is the meaning of an independent relation type in REST API?",
        "options": [
            "Tasks can exist with or without a project",
            "Projects cannot exist without tasks",
            "Tasks and projects are the same",
            "Tasks must be completed before a project starts"
        ],
        "answer": "Tasks can exist with or without a project"
    },
    {
        "question": "What is the URI design rule for a sub-resource's ID?",
        "options": [
            "GET /{resource}/{sub-resource}/{sub-resource-id}",
            "POST /{resource}/{sub-resource-id}",
            "PUT /{resource}/{resource-id}/{sub-resource-id}",
            "DELETE /{resource}/{sub-resource-id}"
        ],
        "answer": "GET /{resource}/{resource-id}/{sub-resource}/{sub-resource-id}"
    },
    {
        "question": "What is the role of HTTP PATCH method in REST API?",
        "options": [
            "To delete a resource",
            "To create a new resource",
            "To update a part of a resource",
            "To retrieve a resource"
        ],
        "answer": "To update a part of a resource"
    },
    {
        "question": "What does a simple (or singleton) resource represent in a resource hierarchy?",
        "options": [
            "A directory",
            "A file",
            "A container that can contain files and subdirectories",
            "A list of resources"
        ],
        "answer": "A container that can contain files and subdirectories"
    },
    {
        "question": "What is the role of a resource schema in REST API?",
        "options": [
            "To define the API's security",
            "To represent the API's base URL",
            "To define the resource representations",
            "To list all available resources"
        ],
        "answer": "To define the resource representations"
    }
]